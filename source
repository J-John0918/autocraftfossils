local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Knit = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit")
local MonsterService = Knit:WaitForChild("Services"):WaitForChild("MonsterService")
local RequestAttack = MonsterService:WaitForChild("RF"):WaitForChild("RequestAttack")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local workspace = game:GetService("Workspace")

local targets = {
    {name = "Larila Desert", cframe = CFrame.new(518.005737, 110.496025, -72.2699585, -0.87988317, 0, -0.475190103, 0, 1, 0, 0.475190103, 0, -0.87988317)},
    {name = "Tralalero Ocean", cframe = CFrame.new(-286.001099, 114.205971, -1867.17078, -0.601737142, 0, 0.79869467, 0, 1, 0, -0.79869467, 0, -0.601737142)},
    {name = "Mount Ambalabu", cframe = CFrame.new(-1535.69019, 152.74617, 1377.92468, 0.616315722, 0, 0.787499189, 0, 1, 0, -0.787499189, 0, 0.616315722)},
    {name = "Chicleteiramania", cframe = CFrame.new(-2634.37817, 118.866943, -897.162109, -0.889701247, 0, -0.456543177, 0, 1, 0, 0.456543177, 0, -0.889701247)},
    {name = "Nuclearo Core", cframe = CFrame.new(-2195.05762, 296.363434, -3752.3606, -0.959328175, 0, 0.282293051, 0, 1, 0, -0.282293051, 0, -0.959328175)},
    {name = "Udin Dinlympus", cframe = CFrame.new(1291.12537, -36.6245804, -4261.10449, 0.828126669, -0, -0.560541034, 0, 1, -0, 0.560541034, 0, 0.828126669)},
    {name = "Glorbo Heights", cframe = CFrame.new(-3942.86523, 57.0068855, 937.338318, -0.123502731, 0, -0.99234426, 0, 1, 0, 0.99234426, 0, -0.123502731)},
    {name = "Brainrot Abyss", cframe = CFrame.new(-1787.74072, 204.567688, 5014.95361, -1, 0, 0, 0, 1, 0, 0, 0, -1)},
    {name = "Bombardino Sewer", cframe = CFrame.new(-3606.6626, 203.064636, 2249.70972, -1, 0, 0, 0, 1, 0, 0, 0, -1)},
}

local priorityMonsters = {
    "YONI",
    "YONII",
    "Coccodrillo Cheese",
    "Coccodrillo Formaggioso",
    "Chachechchachachachi",
    "Chachechichachachachi",
    "CanneIIoni Dragoni",
    "Cannelloni Dragoni",
    "Chicleteira",
    "Rang Ring Ring Bus Ireng",
    "GRAIPUS MEDUS",
    "Hipopotamino Supermarketino"
}

local function findPriorityMonsters()
    local foundMonsters = {}
    local monsterNameSet = {}
    for _, name in ipairs(priorityMonsters) do
        monsterNameSet[string.lower(name)] = true
    end

    for _, child in ipairs(workspace:GetChildren()) do
        if child:IsA("Model") and monsterNameSet[string.lower(child.Name)] then
            local humanoid = child:FindFirstChildOfClass("Humanoid")
            local hrp = child:FindFirstChild("HumanoidRootPart")
            if humanoid and humanoid.Health > 0 and hrp then
                table.insert(foundMonsters, child)
            end
        end
    end
    return foundMonsters
end

local function teleportTo(cframe)
    local position = cframe.Position
    local rayOrigin = position + Vector3.new(0, 10, 0)
    local rayDirection = Vector3.new(0, -100, 0)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Exclude

    local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

    if raycastResult then
        HumanoidRootPart.CFrame = CFrame.new(raycastResult.Position + Vector3.new(0, 5, 0))
    else
        HumanoidRootPart.CFrame = CFrame.new(position + Vector3.new(0, 10, 0))
    end
end

local function attackAtPosition(position)
    local args = {CFrame.new(position)}
    RequestAttack:InvokeServer(unpack(args))
end

while true do
    local foundPriorityMonsters = findPriorityMonsters()
    local isPriorityMode = #foundPriorityMonsters > 0
    local startTime = tick()

    if isPriorityMode then
        print("Priority Mode: Special monsters found. Actively hunting for 5 minutes.")

        while tick() - startTime < 300 do
            for _, area in ipairs(targets) do
                teleportTo(area.cframe)
                wait(2)

                local monsters = findPriorityMonsters()
                if #monsters > 0 then
                    print("Found " .. #monsters .. " priority monsters in " .. area.name)
                    
                    table.sort(monsters, function(a, b)
                        return (a:GetPrimaryPartCFrame().Position - HumanoidRootPart.Position).magnitude < (b:GetPrimaryPartCFrame().Position - HumanoidRootPart.Position).magnitude
                    end)
                    
                    for _, monster in ipairs(monsters) do
                        local humanoid = monster:FindFirstChildOfClass("Humanoid")
                        local hrp = monster:FindFirstChild("HumanoidRootPart")

                        if humanoid and humanoid.Health > 0 and hrp and hrp.Parent then
                            print("Attacking " .. monster.Name)
                            teleportTo(hrp.Position)
                            wait(0.5)
                            
                            while humanoid and humanoid.Health > 0 and hrp.Parent do
                                attackAtPosition(hrp.Position)
                                wait(1)
                            end
                            print(monster.Name .. " defeated.")
                        end
                    end
                else
                    print("No priority monsters in " .. area.name .. ". Moving to next area.")
                end
            end
        end
        print("Priority Mode ended. Checking for new priority monsters.")
    else
        print("Normal Mode: No special monsters found. Farming at each location in sequence.")
        for _, target in ipairs(targets) do
            print("Teleporting to " .. target.name)
            teleportTo(target.cframe)
            wait(1)

            if #findPriorityMonsters() > 0 then
                print("Priority monster detected! Switching to Priority Mode.")
                break
            end
            
            attackAtPosition(target.cframe.Position)
            
            wait(1)
        end
        print("Completed all targets, restarting cycle to check for respawns...")
        wait(5)
    end
end
