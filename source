-- Collect
local function collectPet()
    local args = {
        [1] = "Pet"
    }
    game:GetService("ReplicatedStorage").API:FindFirstChild("MiningAPI/ClaimMachineAction"):InvokeServer(unpack(args))
end

-- Buy fossil x4
local function buyFossil(fossilName)
    local args = {
        [1] = fossilName
    }
    for i = 1, 4 do
        game:GetService("ReplicatedStorage").API:FindFirstChild("MiningAPI/PurchaseFossilPack"):FireServer(unpack(args))
        wait(3) -- Wait for 3 seconds between each purchase
    end
end

-- Place fossil
local function placeFossil(machineName, quantity)
    local args = {
        [1] = machineName,
        [2] = quantity
    }
    game:GetService("ReplicatedStorage").API:FindFirstChild("MiningAPI/UpdateNPCFlag"):FireServer(unpack(args))
end

-- Pay for fossil
local function payForFossil(petName, fossilName)
    local args = {
        [1] = petName,
        [2] = fossilName
    }
    game:GetService("ReplicatedStorage").API:FindFirstChild("MiningAPI/StartMachineAction"):InvokeServer(unpack(args))
end

-- Execute the sequence of actions
local function executeSequence(fossilName, machineName, petName)
    collectPet()
    wait(5) -- Wait for 5 seconds after collecting pet
    buyFossil(fossilName)
    placeFossil(machineName, 1)
    wait(3) -- Wait for 3 seconds after placing fossil
    payForFossil(petName, fossilName)
end

-- Function to repeat the sequence every 21 minutes
local function repeatSequence(fossilName, machineName, petName)
    while true do
        executeSequence(fossilName, machineName, petName)
        wait(21 * 60) -- Wait for 21 minutes
    end
end

-- Example usage
local fossilName = "fossil_2024_elasmosaurus_fossil"
local machineName = "first_time_fossil_machine"
local petName = "Pet"
repeatSequence(fossilName, machineName, petName)
